{"title":"从最简单的程序开始教你怎么破解（二）","uid":"fe0844f28d620c750572bf26776fbb40","slug":"从最简单的程序开始教你怎么破解（二）","date":"2020-01-30T01:16:00.000Z","updated":"2021-10-07T00:48:59.288Z","comments":true,"path":"api/articles/从最简单的程序开始教你怎么破解（二）.json","keywords":null,"cover":[],"content":"<p>今天，我们还讲Hopper反编译，不过用的还是昨天的<code>CM</code>。我今天准备告诉大家，怎样替换程序里的字符串，这样就可以为所欲为了。</p>\n<blockquote>\n<p>目标：把程序修改成，只有使用自己规定的注册码，才能激活成功。  </p>\n</blockquote>\n<h1 id=\"开始分析\"><a href=\"#开始分析\" class=\"headerlink\" title=\"开始分析\"></a>开始分析</h1><p>首先，程序拖入 Hopper 解析。完成后，在左边的搜索视图中选择<code>Str</code>，查看程序里的字符串。因为程序比较小，所以字符串只有5个。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/TLHorse/TLBlogBed/2020/1/29/hop-cm2-search-str.png\" alt=\"查看字符串\"></p>\n<p>这五个字符串，前面一个是激活码（怎么判断出来的上篇文章讲过），中间四个其实是中文的十六进制编码（对应的是“说明”“要求”和“输入错误”几个字符串），最后一个是定义用来处理换行的。既然要修改第一个，我们就点进去。</p>\n<h1 id=\"修改程序\"><a href=\"#修改程序\" class=\"headerlink\" title=\"修改程序\"></a>修改程序</h1><p>修改字符串有两种方法。</p>\n<h2 id=\"方法一：修改十六进制\"><a href=\"#方法一：修改十六进制\" class=\"headerlink\" title=\"方法一：修改十六进制\"></a>方法一：修改十六进制</h2><ol>\n<li><p>把视图切换为<code>Hex Mode</code>，这个模式已经自动给你高亮了对应激活码的16进制码。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/TLHorse/TLBlogBed/2020/1/29/hop-cm2-16bit.png\" alt=\"16进制码\"></p>\n</li>\n<li><p>例如，你要把激活码改成<code>111111-111111-111111</code>，那么，十六进制里，<code>1</code>对应<code>31</code>，而连字符<code>-</code>对应着<code>2D</code>，所以你就要把对应的十六进制改成：</p>\n</li>\n</ol>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">31 31 31 31 31 31 2D 31 31 31 31 31 31 2D 31 31 31 31 31 31<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>这里我要说明一点，如果你的激活码比以前的激活码要短，那么你就尽管从头开始修改，最后剩下几位，你就在相应的位置上填写<code>00</code>即可。如果激活码比以前的长，那么会出现一个修改文件偏移量的问题，比较复杂，再次不阐述。</p>\n<p>例如，你的激活码是：<code>helloworld!</code>，对应下来就是：<code>68 65 6c 6c 6f 77 6f 72 6c 64 21</code><br>2.  如果你嫌麻烦，可以在右边对应的字符串一个个修改成<code>1</code>和<code>-</code>， Hopper 会自动为你生成十六进制填在左边。<br>3.  <kbd>command</kbd>+<kbd>shift</kbd>+<kbd>E</kbd>，导出，完工！</p>\n<h2 id=\"方法二：修改汇编代码\"><a href=\"#方法二：修改汇编代码\" class=\"headerlink\" title=\"方法二：修改汇编代码\"></a>方法二：修改汇编代码</h2><p>这个方法要比修改十六进制简单得多，我把它放在后面，是因为修改出来， Hopper 显示得有些让人迷糊，看不懂。我开始也用的这个方法，感觉错了，后来才知道这是最简单的方法。如果你用的是修改十六进制的方法，不妨撤回，然后用这个方法试试。</p>\n<ol>\n<li><p> 把视图切换回汇编代码，确保在激活码的地方。汇编代码应该长这样：</p>\n<pre class=\"line-numbers language-nasm\" data-language=\"nasm\"><code class=\"language-nasm\">                \t\ta82mal929anyw9m:\n0000000100000e80         db         &quot;82mal9-29anyw-9msfz6&quot;, 0                   ; DATA XREF&#x3D;_main+8\n0000000100000e95         db         &quot;&quot;, 0\n0000000100000e96         db         &quot;&quot;, 0\n0000000100000e97         db         &quot;&quot;, 0\n0000000100000e98         db         &quot;&quot;, 0                                       ; DATA XREF&#x3D;_$s10Crackme__16verifyyyF+118, _$s10Crackme__16verifyyyF+653\n0000000100000e99         db         &quot;&quot;, 0\n0000000100000e9a         db         &quot;&quot;, 0\n0000000100000e9b         db         &quot;&quot;, 0\n0000000100000e9c         db         &quot;&quot;, 0\n0000000100000e9d         db         &quot;&quot;, 0\n0000000100000e9e         db         &quot;&quot;, 0\n0000000100000e9f         db         &quot;&quot;, 0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>鼠标选中第一行。我的第一行是指：<br> <code>0000000100000e80         db         &amp;quot;82mal9-29anyw-9msfz6&amp;quot;, 0                   ; DATA XREF=_main+8</code><br> 如果你不是这一行，会发生不好的结果。</p>\n</li>\n<li><p> <kbd>option</kbd>+<kbd>A</kbd>修改，输入指令：<code>db “你想要的激活码”, 0</code></p>\n</li>\n<li><p> 之后，你的那行代码就会改成这样：</p>\n<pre class=\"line-numbers language-nasm\" data-language=\"nasm\"><code class=\"language-nasm\">0000000100000e80         db         6 dup (0x31), 0x2d, 0x31                    ; DATA XREF&#x3D;_main+8\n0000000100000e88         db         5 dup (0x31), 0x2d, 2 dup (0x31)\n0000000100000e90         db         4 dup (0x31), 0x00<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>很奇怪吧！这就是一个坑：这段代码看起来怪怪的。为什么呢？<br>我提醒一下大家：</p>\n</li>\n<li><p> <code>db</code>命令是定义字节，基本上常量和变量的定义都会出现，不必纠结。</p>\n</li>\n<li><p> <code>dup</code>是复制的意思，对应英文单词<code>duplicate</code>。那么<code>6 dup (...)</code>是什么意思，就可想而知了。</p>\n</li>\n<li><p> <code>0x31</code>和<code>0x2d</code>都是刚才说过的十六进制。<br>现在你就会明白，这段代码是没有问题的。</p>\n</li>\n</ol>\n<h1 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h1><p>提醒大家注意几点：</p>\n<ul>\n<li>  十六进制码<strong>不区分大小写</strong>；</li>\n<li>  汉字也可以转化为十六进制。如果你在程序中看到类似<code>x98\\xH7\\x2B\\x..\\x..</code>这样的东西，是中文的十六进制编码，不是乱码。你可以到<a href=\"http://tools.jb51.net/tools/base64_decode-gb2312.php\">相关解码网站</a>解码成中文。</li>\n<li>  如果你需要十六进制的加解密，可以试试<a href=\"http://www.bejson.com/convert/ox2str/\">BeJson</a>等工具。</li>\n<li>  在HDA里输入命令时，用不着纠结汇编指令与参数之间的空格，空一个格就好， Hopper 会自动给你补充的。</li>\n</ul>\n","text":"今天，我们还讲Hopper反编译，不过用的还是昨天的CM。我今天准备告诉大家，怎样替换程序里的字符串，这样就可以为所欲为了。 目标：把程序修改成，只有使用自己规定的注册码，才能激活成功。 开始分析首先，程序拖入 Hopper 解析。完成后，在左边的搜索视图中选择Str，查看程序里...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"计算机","slug":"计算机","count":24,"path":"api/categories/计算机.json"}],"tags":[{"name":"反编译","slug":"反编译","count":16,"path":"api/tags/反编译.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%BC%80%E5%A7%8B%E5%88%86%E6%9E%90\"><span class=\"toc-text\">开始分析</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E6%94%B9%E7%A8%8B%E5%BA%8F\"><span class=\"toc-text\">修改程序</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%E4%B8%80%EF%BC%9A%E4%BF%AE%E6%94%B9%E5%8D%81%E5%85%AD%E8%BF%9B%E5%88%B6\"><span class=\"toc-text\">方法一：修改十六进制</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%E4%BA%8C%EF%BC%9A%E4%BF%AE%E6%94%B9%E6%B1%87%E7%BC%96%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">方法二：修改汇编代码</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9\"><span class=\"toc-text\">注意事项</span></a></li></ol>","author":{"name":"TLHorse","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/TLHorse/TLBlogBed@master/blog_img/avatar.jpg","link":"/","description":"","socials":{"github":"https://github.com/TLHorse","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_45415111","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"从最简单的程序开始教你怎么破解（一）","uid":"c5704ebec0bcac2a9b12cc350a1932a4","slug":"从最简单的程序开始教你怎么破解（一）","date":"2020-01-30T01:16:00.000Z","updated":"2021-10-07T00:48:59.288Z","comments":true,"path":"api/articles/从最简单的程序开始教你怎么破解（一）.json","keywords":null,"cover":[],"text":"28号我发了一篇关于破解迅雷的文章，如果你看到了，你就会先被那上千的字数吓住。但是破解（反编译）真的有那么难吗？作为一个不太“菜”的“菜鸟”，我想告诉你，其实破解一个软件只是找到思路后，改改二进制的逻辑罢了。但是真的又有这么简单吗？也不是。 如果你刚接触反编译、破解软件，那就从自...","link":"","photos":[],"count_time":{"symbolsCount":"4.5k","symbolsTime":"4 mins."},"categories":[{"name":"计算机","slug":"计算机","count":24,"path":"api/categories/计算机.json"}],"tags":[{"name":"反编译","slug":"反编译","count":16,"path":"api/tags/反编译.json"}],"author":{"name":"TLHorse","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/TLHorse/TLBlogBed@master/blog_img/avatar.jpg","link":"/","description":"","socials":{"github":"https://github.com/TLHorse","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_45415111","juejin":"","customs":{}}}},"next_post":{"title":"《草房子》读后感","uid":"fe20190fc9a6ee7ba02576cb1f3a116b","slug":"《草房子》读后感","date":"2020-01-29T02:40:35.000Z","updated":"2022-03-20T08:02:46.401Z","comments":true,"path":"api/articles/《草房子》读后感.json","keywords":null,"cover":[],"text":"在这几天看的书中，给我印象最深刻的就是《草房子》，令我忍不住想要写些我的感想。 故事讲述了主人公桑桑跟随来接管油麻地小学的父亲来到油麻地期间，令他刻骨铭心、终身难忘的小学六年生活。在这里，他明白了许多发人深省的哲理，亲眼目睹甚至是经历了一连串感人肺腑、撼动人心的故事，例如：他和纸...","link":"","photos":[],"count_time":{"symbolsCount":664,"symbolsTime":"1 mins."},"categories":[{"name":"随笔","slug":"随笔","count":33,"path":"api/categories/随笔.json"}],"tags":[{"name":"读后感","slug":"读后感","count":1,"path":"api/tags/读后感.json"}],"author":{"name":"TLHorse","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/TLHorse/TLBlogBed@master/blog_img/avatar.jpg","link":"/","description":"","socials":{"github":"https://github.com/TLHorse","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_45415111","juejin":"","customs":{}}}}}