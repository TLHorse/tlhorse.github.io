{"title":"从某加速器的逆向中学习调试分析","uid":"6977f74e17bf66c210227c98376290a7","slug":"从某加速器的逆向中学习调试分析","date":"2022-01-30T06:48:15.000Z","updated":"2022-03-21T12:41:16.944Z","comments":true,"path":"api/articles/从某加速器的逆向中学习调试分析.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/TLHorse/TLBlogBed@master/2022/01/30/pc-1.png","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>我电脑上的<code>brew</code>好久没有更新维护了，GitHub也许久没有登录，原因仅有一个，就是登不上去。在这个时代免费、合法的加速器越来越少。好不容易找到了一个加速器，对外声称免费，但打开一看早已因为缺乏资金改成了付费。<br><img src=\"https://cdn.jsdelivr.net/gh/TLHorse/TLBlogBed@master/2022/01/30/pc-1.png\" alt=\"软件界面\"><br>它就是我们今天破解的目标。</p>\n<h1 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h1><p>我们可以事先把二进制用Hopper加载，观察软件不难发现，使用C语言写的，UI框架是Qt，而且大部分的方法和符号已经被混淆。这为我们的逆向增加了难度，因此我们把字符串作为逆向的突破口，进行破解。</p>\n<p>再次启动软件，观察可能有用的字符串：该软件在启动的时候会显示提示框“套参（原软件参字打错了）已使用完毕，请充值<del>”，点击“点我加速”按钮时，又会出现提示框“套参已使用完毕，请充值</del>”。请记住下面的八个字，它们是我们逆向的关键。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>套参已使用完毕，请充值~</p></blockquote>\n<p>除了两个弹窗之外，该软件还需要注册。据我观察，在未注册情况下注册弹窗会代替套餐弹窗。（因为一开始下载软件后我直接注册了，所以破解中没发现这一点。）我们希望在不注册的情况下使用。</p>\n<p>综上所述我们的破解目标有4点：</p>\n<ol>\n<li>软件启动时的套餐弹窗；</li>\n<li>软件启动时的注册弹窗；</li>\n<li>点我加速时的套餐弹窗；</li>\n<li>点我加速时的注册弹窗。</li>\n</ol>\n<p>接下来就是破解过程。</p>\n<h1 id=\"解决编码问题\"><a href=\"#解决编码问题\" class=\"headerlink\" title=\"解决编码问题\"></a>解决编码问题</h1><p>我在Hopper中搜索字符串的时候，一无所获。往下翻我发现除了一些英文字符串保持原样之外，剩下的都被编码，类似<code>\\x97\\xE5\\x8F\\x82\\xE5\\xB7\\x...</code>。<br><img src=\"https://cdn.jsdelivr.net/gh/TLHorse/TLBlogBed@master/2022/01/29/hex2str-1.jpg\" alt=\"被编码\"><br>这种编码就是<code>utf-8</code>编码，必须转换才能成为中文。频繁地使用第三方工具会大大减慢我们的速度。因此我们不妨写一个Hopper插件（见另一篇文章）：<br><img src=\"https://cdn.jsdelivr.net/gh/TLHorse/TLBlogBed@master/2022/01/30/pc-2.png\" alt=\"pc-2\"><br>此脚本可以将<code>utf-8</code>转中文，以便调试的时候使用。不过要搜索字符串的时候，只能用Python手动将中文转为<code>utf-8</code>了。</p>\n<h1 id=\"一破点我加速\"><a href=\"#一破点我加速\" class=\"headerlink\" title=\"一破点我加速\"></a>一破点我加速</h1><p>如题，这两个弹窗应该（事实也验证了）在一个大进程中，咱们一块搞定。尝试搜索一些关键词，例如我搜的“套参已使用完毕”，可以发现<br><img src=\"https://cdn.jsdelivr.net/gh/TLHorse/TLBlogBed@master/2022/01/30/pc-3.png\" alt=\"套餐字符串\"><br>我们查看行内注释的交叉引用（按<kbd>X</kbd>也可以），可以看到有两个地址在引用：</p>\n<pre class=\"line-numbers language-asm\" data-language=\"asm\"><code class=\"language-asm\">; DATA XREF&#x3D;sub_100015e10+779, sub_10001f070+1545<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>这对应的应该是我们之前在软件中看到的两个弹框。<strong>哪个地址是点击一键加速后的进程呢？</strong>首先双击打开第一个引用地址<code>sub_100015e10+779</code>，并跳转到CFG模式。在进程的第一行指令上下断点。运行Debugger，发现软件没有在启动之后立即断下，说明第一个地址的弹窗就是。我们点击点我加速，指令断下，验证了我们的想法。<br><img src=\"https://cdn.jsdelivr.net/gh/TLHorse/TLBlogBed@master/2022/01/30/pc-4.png\" alt=\"暂停运行\"></p>\n<h2 id=\"套餐弹窗\"><a href=\"#套餐弹窗\" class=\"headerlink\" title=\"套餐弹窗\"></a>套餐弹窗</h2><p>确认了该进程是点我加速后出现的进程后，我们把鼠标放到字符串的引用处。<br><img src=\"https://cdn.jsdelivr.net/gh/TLHorse/TLBlogBed@master/2022/01/30/pc-5.png\" alt=\"调试\">如图，<code>0x000000010001611b</code>是出现套餐充值的指令。我们想尽办法不让这条指令所在的代码块运行（<code>loc_1000160f0</code>）。指向<code>loc_1000160f0</code>的有三个箭头，BCD。因此图最右上的代码应当一路下行不跳转直到A，就再不会回到<code>loc_1000160f0</code>了。</p>\n<p>我们直接把BCD上方的三个指令<code>je</code>，<code>jle</code>，<code>je</code>分别反转为<code>jne</code>，<code>jg</code>，<code>jne</code>。我本想用<code>nop</code>，但这对程序有较大的改变。（一开始我只根据调试结果反转了C处的判断指令，然而发现在D处就跳转了，经过多次调试，我得到结论BCD都要改）</p>\n<p>先别急着运行，因为运行后会要求登录。咱们一口气搞定登录问题。<br><img src=\"https://cdn.jsdelivr.net/gh/TLHorse/TLBlogBed@master/2022/01/30/pc-7.png\" alt=\"要求登录\"></p>\n<h2 id=\"登录弹窗\"><a href=\"#登录弹窗\" class=\"headerlink\" title=\"登录弹窗\"></a>登录弹窗</h2><p>因为软件先验证登录，所以我们顺着刚才的地址往上翻：<br><img src=\"https://cdn.jsdelivr.net/gh/TLHorse/TLBlogBed@master/2022/01/30/pc-8.png\" alt=\"流程图\"></p>\n<p>如图，根据字面意思很容易判断出逻辑。一开始我只讲判断是否登录处条件进行反转，后来发现下面有二次判断。将这两处的<code>je</code>都改为<code>jne</code>，登录解除。运行，逆向成功！<br><img src=\"https://cdn.jsdelivr.net/gh/TLHorse/TLBlogBed@master/2022/01/30/pc-6.png\" alt=\"逆向成功\"></p>\n<h1 id=\"二破启动弹窗\"><a href=\"#二破启动弹窗\" class=\"headerlink\" title=\"二破启动弹窗\"></a>二破启动弹窗</h1><p>搞定了“一破”，基本功能可以使用了，但是瑕疵是启动还会弹出注册的弹窗。到哪找呢？还记得这个图吗？<br><img src=\"https://cdn.jsdelivr.net/gh/TLHorse/TLBlogBed@master/2022/01/30/pc-8.png\" alt=\"流程图\"><br>右下角我们可以看到一个<code>call</code>：</p>\n<pre class=\"line-numbers language-asm\" data-language=\"asm\"><code class=\"language-asm\">0x00000001000160c5         call       __ZN10CentralMgr15ShowLoginDialogEv<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>call后的函数就是全局定义的弹窗。查看这个符号的交叉引用，有7处。双击跳转到这个打开弹窗的函数，然后在首行下断点，并运行。<br><img src=\"https://cdn.jsdelivr.net/gh/TLHorse/TLBlogBed@master/2022/01/30/pc-9.png\" alt=\"callstack\"><br>刚运行就断下了，调用堆栈中第一行就是弹窗函数，第二行就是调用它的进程：<code>CentralMgr::onAfterInit()</code>。通过交叉引用找到这个进程里的<code>call</code>：</p>\n<pre class=\"line-numbers language-asm\" data-language=\"asm\"><code class=\"language-asm\">                       loc_10000856d:\n0x000000010000856d         mov        rdi, r15 ; CODE XREF&#x3D;__ZN10CentralMgr11onAfterInitEv+1369\n0x0000000100008570         call       __ZN10CentralMgr15ShowLoginDialogEv ; CentralMgr::ShowLoginDialog()<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>在CFG中代码块往上走一层，把逻辑判断<code>je</code>改<code>jne</code>，破解成功。</p>\n<p>运行一下，令我们惊奇的是，启动时的套餐充值弹窗，也消失了！大功告成！</p>\n<p>END</p>\n","text":"前言我电脑上的brew好久没有更新维护了，GitHub也许久没有登录，原因仅有一个，就是登不上去。在这个时代免费、合法的加速器越来越少。好不容易找到了一个加速器，对外声称免费，但打开一看早已因为缺乏资金改成了付费。它就是我们今天破解的目标。 分析我们可以事先把二进制用Hopper...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"计算机","slug":"计算机","count":24,"path":"api/categories/计算机.json"}],"tags":[{"name":"反编译","slug":"反编译","count":16,"path":"api/tags/反编译.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%88%86%E6%9E%90\"><span class=\"toc-text\">分析</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E5%86%B3%E7%BC%96%E7%A0%81%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">解决编码问题</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%80%E7%A0%B4%E7%82%B9%E6%88%91%E5%8A%A0%E9%80%9F\"><span class=\"toc-text\">一破点我加速</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%A5%97%E9%A4%90%E5%BC%B9%E7%AA%97\"><span class=\"toc-text\">套餐弹窗</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%99%BB%E5%BD%95%E5%BC%B9%E7%AA%97\"><span class=\"toc-text\">登录弹窗</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E7%A0%B4%E5%90%AF%E5%8A%A8%E5%BC%B9%E7%AA%97\"><span class=\"toc-text\">二破启动弹窗</span></a></li></ol>","author":{"name":"TLHorse","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/TLHorse/TLBlogBed@master/blog_img/avatar.jpg","link":"/","description":"","socials":{"github":"https://github.com/TLHorse","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_45415111","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"别担心，我可以","uid":"bbc6b85ee62fb0c0a4d8ca5ac7761599","slug":"别担心，我可以","date":"2022-02-14T05:11:30.000Z","updated":"2022-03-20T14:37:15.674Z","comments":true,"path":"api/articles/别担心，我可以.json","keywords":null,"cover":null,"text":"“我给你在网上打了个车，信息发给你了，你可得记着啊！第一次坐网约行吗？”电话那头，传来妈妈的担心。“我怎么就记不住了？当然可以！” 灰色的信息气泡，在手机中猛然弹了出来，一串串蚂蚁般的数字在文字间爬行着。我抬手看表，12:57分——离着到达时间还早，放下手机，若无其事地拿起筷子，...","link":"","photos":[],"count_time":{"symbolsCount":787,"symbolsTime":"1 mins."},"categories":[{"name":"随笔","slug":"随笔","count":33,"path":"api/categories/随笔.json"}],"tags":[{"name":"记叙文","slug":"记叙文","count":11,"path":"api/tags/记叙文.json"}],"author":{"name":"TLHorse","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/TLHorse/TLBlogBed@master/blog_img/avatar.jpg","link":"/","description":"","socials":{"github":"https://github.com/TLHorse","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_45415111","juejin":"","customs":{}}}},"next_post":{"title":"零基础写一个Hopper插件hex2str","uid":"6c4d8fd5ee0834439819f79dc5ca0952","slug":"零基础写一个Hopper插件hex2str","date":"2022-01-29T03:13:16.000Z","updated":"2022-03-21T12:39:29.299Z","comments":true,"path":"api/articles/零基础写一个Hopper插件hex2str.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/TLHorse/TLBlogBed@master/2022/01/29/hex2str-2.png","text":"前言之所以这么说，是因为我也是零基础写的。今天上午本来想搞一搞某个软件，放到Hopper里一看：满眼的十六进制！这可怎么转换…… 方法一：Python&gt;&gt;&gt; hexstr &#x3D; b&quot;\\xe5\\xa5\\x97\\xe5\\x8f\\x82\\xe5\\xb...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"计算机","slug":"计算机","count":24,"path":"api/categories/计算机.json"}],"tags":[{"name":"反编译","slug":"反编译","count":16,"path":"api/tags/反编译.json"},{"name":"Python","slug":"Python","count":5,"path":"api/tags/Python.json"}],"author":{"name":"TLHorse","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/TLHorse/TLBlogBed@master/blog_img/avatar.jpg","link":"/","description":"","socials":{"github":"https://github.com/TLHorse","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_45415111","juejin":"","customs":{}}}}}