{"title":"Mac视频下载软件Downie分析与暴破","uid":"e6d4e3df935f4c53d43dcd7f1d019e97","slug":"Mac视频下载软件Downie分析与暴破","date":"2022-02-16T08:37:11.000Z","updated":"2022-03-21T05:13:58.337Z","comments":true,"path":"api/articles/Mac视频下载软件Downie分析与暴破.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/TLHorse/TLBlogBed@master/2022/02/25/downie-6.png","content":"<p>Downie，全能的网络视频下载软件。在论坛中搜索Downie，一大把一大把的TNT破解出现在眼前。但是求人不如求己，因此本文主要介绍Downie暴破，技术含量不是很大，包含中变量的tweak，和动态库之间交互的分析。</p>\n<h1 id=\"软件分析\"><a href=\"#软件分析\" class=\"headerlink\" title=\"软件分析\"></a>软件分析</h1><p>打开Downie，在一系列的初始化后，会弹出试用期限窗口，提醒试用倒计时（14天）。操作可知，在试用期限中，软件的所有功能都可以正常使用。点开菜单栏中的<code>Downie 4</code>，可以看到几个关于注册的按钮。<br><img src=\"https://cdn.jsdelivr.net/gh/TLHorse/TLBlogBed@master/2022/02/16/downie-1.png\" alt=\"downie-1\"><br>通过我们观察到的元素，可以分析出如下三种逆向方案：</p>\n<ol>\n<li><strong>分析算法写注册机</strong>：现在软件都是联网注册，分析算法没啥用；</li>\n<li><strong>修改剩余天数为定值</strong>：分析非常简单；</li>\n<li><strong>修改全局已注册变量</strong>：也很简单，需同时去除校对验证函数。</li>\n</ol>\n<p>本文介绍二三两种方法。</p>\n<h1 id=\"代码分析\"><a href=\"#代码分析\" class=\"headerlink\" title=\"代码分析\"></a>代码分析</h1><p>把主程序二进制拖进Hopper进行分析。对于这种应用程序的启动弹窗来说，懂Apple开发的都知道，我们可以从macOS应用程序的生命周期入手。搜索<code>appDidFinishLaunching</code>可以找到如下符号：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">s6Downie13XUAppDelegateC29applicationDidFinishLaunchingyy10Foundation12NotificationVF<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>该函数会在程序启动完成后被调用。我们在<code>loc_100037546</code>中可以找到一些有关license的代码：</p>\n<pre class=\"line-numbers language-asm\" data-language=\"asm\"><code class=\"language-asm\">call imp___stubs__$s9Licensing11CMLicensingCMa\nmov  r13, rax\ncall imp___stubs__$s9Licensing11CMLicensingC6sharedACvgZ\nmov  rbx, rax\nmov  rax, qword [_$s9Licensing11CMLicensingC8delegateAA0B8Delegate_pSgvpWvd_100118910]\nmov  qword [rbp+var_30], r14\nmov  r12, qword [rax]\nlea  r14, qword [rbx+r12]\nlea  rsi, qword [rbp+var_E8]\nmov  edx, 0x1\nmov  rdi, r14\nxor  ecx, ecx\ncall imp___stubs__swift_beginAccess\nlea  rax, qword [_$s6Downie13XUAppDelegateC9Licensing011CMLicensingC0AAWP]<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>随便找一个call跟踪进去，都可以看到外部代码，在注释中都可看到如下路径：</p>\n<pre class=\"line-numbers language-asm\" data-language=\"asm\"><code class=\"language-asm\">; in @executable_path&#x2F;..&#x2F;Frameworks&#x2F;Licensing.framework&#x2F;Versions&#x2F;A&#x2F;Licensing<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>我们发现，Downie对license的验证流程原来写到了Licensing附加库中。把它拖到Hopper中，转而分析Licensing！</p>\n<h1 id=\"破解一：修改剩余天数\"><a href=\"#破解一：修改剩余天数\" class=\"headerlink\" title=\"破解一：修改剩余天数\"></a>破解一：修改剩余天数</h1><p>观察代码风格，很明显Licensing是Swift写的。搜索<code>days</code>这样的字眼，在搜索结果中找<code>getter</code>，很明显可以找到一个Swift整型变量：<code>s9Licensing11CMLicensingC21numberOfDaysRemainingSivg</code>（符号），返回一个<code>int</code>值。在汇编中，把返回寄存器<code>rax</code>改为定值。</p>\n<pre class=\"line-numbers language-asm\" data-language=\"asm\"><code class=\"language-asm\">mov rax, 0xff\nret<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/TLHorse/TLBlogBed@master/2022/02/25/downie-3.png\" alt=\"downie-3\"><br>嘿嘿，剩余天数从14天一下飙升到255天。在系统设置里怎么改日期，都不会变！朋友们，破解已经成功！</p>\n<p>其实有一个遗憾，每次启动都会弹出这个窗口。我总想把它去掉，但找了许多有关的函数和<code>windowDidLoad</code>方法，很奇怪都未能实现。</p>\n<h1 id=\"破解二（完美）：修改全局注册变量\"><a href=\"#破解二（完美）：修改全局注册变量\" class=\"headerlink\" title=\"破解二（完美）：修改全局注册变量\"></a>破解二（完美）：修改全局注册变量</h1><p>抱着试试看的心态。我搜索了<code>islicensed</code>关键词，没想到还真有这么明显的匹配项：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">s9Licensing11CMLicensingC10isLicensedSbvg<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>赶快把<code>rax</code>改成0x1，启动调试，仍然未注册（节省空间，此处不贴图）。这说明软件获取注册状态调用的不是这个函数。到底是哪个环节出了问题？瞟一眼伪代码：</p>\n<pre class=\"line-numbers language-objc\" data-language=\"objc\"><code class=\"language-objc\">int _$s9Licensing11CMLicensingC10isLicensedSbvg() &#123;\n    [sub_11600() release];\n    [rdx release];\n    r14 &#x3D; [rcx activated];\n    [rcx release];\n    rax &#x3D; r14 !&#x3D; 0x0 ? 0x1 : 0x0;\n    return rax;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>莫名其妙发现了一个名为<code>activated</code>的selector，无交叉引用，无来源。很有可能是外部符号。看看Downie还有什么库：还有Paddle没用呢！</p>\n<p>把Paddle拽到Hopper分析，搜索<code>activated</code>，得到结果：</p>\n<pre class=\"line-numbers language-objc\" data-language=\"objc\"><code class=\"language-objc\">&#x2F;* @class PADProduct *&#x2F;\n-(char)activated &#123;\n    rax &#x3D; [self licenseController];\n    rax &#x3D; (*(*rax + 0x58))(rax);\n    return rax;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>很标准的类方法，返回<code>char</code>类型，就是它了。打开汇编，<code>rax</code>改为1：</p>\n<pre class=\"line-numbers language-asm\" data-language=\"asm\"><code class=\"language-asm\">mov rax, 1\nret<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/TLHorse/TLBlogBed@master/2022/02/25/downie-4.png\" alt=\"downie-4\"><br>很可恶，Downie直接崩溃！但这是个好消息，证明了我们的tweak是成功的，只是被某个检验流程检测到了。别慌，接着找找同类的关键词：<br><img src=\"https://cdn.jsdelivr.net/gh/TLHorse/TLBlogBed@master/2022/02/25/downie-5.png\" alt=\"downie-5\"><br>开发者小心思真多！两个verify函数，第一个指向第二个，我们看看0x95c5的代码：</p>\n<pre class=\"line-numbers language-objc\" data-language=\"objc\"><code class=\"language-objc\">&#x2F;* @class PADProduct *&#x2F;\n-(void)verifyActivationDetailsWithCompletion:(void *)arg2 &#123;\n    r13 &#x3D; self;\n    r14 &#x3D; [arg2 retain];\n    rax &#x3D; [r13 licenseController];\n    if (((*(*rax + 0x50))(rax) &#x3D;&#x3D; 0x0) &amp;&amp; ([r13 activated] &#x3D;&#x3D; 0x0)) &#123;\n            r15 &#x3D; [[PADErrorFactory errorWithCode:0xffffffffffffff94] retain];\n            if (r14 !&#x3D; 0x0) &#123;\n                    var_88 &#x3D; *__NSConcreteStackBlock;\n                    *(&amp;var_88 + 0x8) &#x3D; 0xffffffffc2000000;\n                    *(&amp;var_88 + 0x10) &#x3D; ___52-[PADProduct verifyActivationDetailsWithCompletion:]_block_invoke;\n                    *(&amp;var_88 + 0x18) &#x3D; ___block_descriptor_48_ea8_32bs40s_e5_v8\u0001?0l;\n                    *(&amp;var_88 + 0x20) &#x3D; [r14 retain];\n                    *(&amp;var_88 + 0x28) &#x3D; [r15 retain];\n                    dispatch_async(*__dispatch_main_q, &amp;var_88);\n                    [*(&amp;var_88 + 0x28) release];\n                    [*(&amp;var_88 + 0x20) release];\n            &#125;\n            else &#123;\n                    [r13 sendErrorToPaddleDelegateIfResponsive:r15];\n            &#125;\n            rdi &#x3D; r15;\n    &#125;\n    else &#123;\n            rax &#x3D; [NSDate date];\n            rax &#x3D; [rax retain];\n            [r13 setLastVerifyDate:rax];\n            [rax release];\n            [r13 saveProductFile];\n            r12 &#x3D; [r13 determineActivationService];\n            r15 &#x3D; [r13 licenseController];\n            var_58 &#x3D; *__NSConcreteStackBlock;\n            *(&amp;var_58 + 0x8) &#x3D; 0xffffffffc2000000;\n            *(&amp;var_58 + 0x10) &#x3D; ___52-[PADProduct verifyActivationDetailsWithCompletion:]_block_invoke.209;\n            *(&amp;var_58 + 0x18) &#x3D; ___block_descriptor_48_ea8_32s40bs_e28_v32\u0001?0q8q16\u0001&quot;NSDictionary&quot;24l;\n            *(&amp;var_58 + 0x20) &#x3D; r13;\n            *(&amp;var_58 + 0x28) &#x3D; [r14 retain];\n            (*(*r15 + 0x68))(r15, r12, &amp;var_58);\n            rdi &#x3D; var_30;\n    &#125;\n    [rdi release];\n    [r14 release];\n    return;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>观察到<code>PADErrorFactory</code>类，检测到问题会调用这个类的函数。怪不得程序会崩溃！转到汇编，赶紧<code>ret</code>掉。</p>\n<pre class=\"line-numbers language-asm\" data-language=\"asm\"><code class=\"language-asm\">ret<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/TLHorse/TLBlogBed@master/2022/02/25/downie-6.png\" alt=\"downie-6\"><br>这波破解顺理成章，基本没怎么调试，完美暴破！</p>\n<p>从破解的过程，可以梳理出Downie的业务逻辑结构如下：<br><img src=\"https://cdn.jsdelivr.net/gh/TLHorse/TLBlogBed@master/2022/02/17/downie-2.png\" alt=\"关系\"></p>\n<h1 id=\"禁用取消激活功能\"><a href=\"#禁用取消激活功能\" class=\"headerlink\" title=\"禁用取消激活功能\"></a>禁用取消激活功能</h1><p>破解完后我们发现一个小问题，即点击取消激活后Downie会先弹出对话框，确定后app崩溃。<br><img src=\"https://cdn.jsdelivr.net/gh/TLHorse/TLBlogBed@master/2022/02/26/downie-7.png\" alt=\"取消激活\"><br>与其分析算法不如直接去掉这个功能。我们大致可推测功能应该在Licensing中。搜索deactivate关键词可搜到好多函数，但我们选择下面这个：</p>\n<pre class=\"line-numbers language-objc\" data-language=\"objc\"><code class=\"language-objc\">void _$s9Licensing11CMLicensingC17deactivateLicenseyyF(int arg0, int arg1, int arg2, int arg3, int arg4) &#123;\n    rdx &#x3D; arg2;\n    [sub_11600() release];\n    [rdx release];\n    r14 &#x3D; [arg3 activated];\n    [arg3 release];\n    if (r14 &#x3D;&#x3D; 0x0) goto loc_10ba3;\n\nloc_10830:\n    var_30 &#x3D; [objc_allocWithZone(@class(NSAlert)) init];\n    if (*qword_28418 !&#x3D; 0xffffffffffffffff) &#123;\n            swift_once(qword_28418, sub_a6b0, rdx);\n    &#125;\n    sub_1ca70();\n\n&#x2F;&#x2F; ............<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>为啥选的是这个？因为这个函数里有<code>NSAlert</code>的初始化。如果想去掉，<code>ret</code>即可。</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>可以看到Downie的静态库还真不少。这次破解主要是以静态分析为主，但要调试的话，也没问题。我破解速度并不是很快，总是不断试错。本人逆向能力也需要提升啊。</p>\n","feature":true,"text":"Downie，全能的网络视频下载软件。在论坛中搜索Downie，一大把一大把的TNT破解出现在眼前。但是求人不如求己，因此本文主要介绍Downie暴破，技术含量不是很大，包含中变量的tweak，和动态库之间交互的分析。 软件分析打开Downie，在一系列的初始化后，会弹出试用期限...","link":"","photos":[],"count_time":{"symbolsCount":"5.4k","symbolsTime":"5 mins."},"categories":[{"name":"计算机","slug":"计算机","count":24,"path":"api/categories/计算机.json"}],"tags":[{"name":"反编译","slug":"反编译","count":16,"path":"api/tags/反编译.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90\"><span class=\"toc-text\">软件分析</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90\"><span class=\"toc-text\">代码分析</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%A0%B4%E8%A7%A3%E4%B8%80%EF%BC%9A%E4%BF%AE%E6%94%B9%E5%89%A9%E4%BD%99%E5%A4%A9%E6%95%B0\"><span class=\"toc-text\">破解一：修改剩余天数</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%A0%B4%E8%A7%A3%E4%BA%8C%EF%BC%88%E5%AE%8C%E7%BE%8E%EF%BC%89%EF%BC%9A%E4%BF%AE%E6%94%B9%E5%85%A8%E5%B1%80%E6%B3%A8%E5%86%8C%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">破解二（完美）：修改全局注册变量</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%A6%81%E7%94%A8%E5%8F%96%E6%B6%88%E6%BF%80%E6%B4%BB%E5%8A%9F%E8%83%BD\"><span class=\"toc-text\">禁用取消激活功能</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li></ol>","author":{"name":"TLHorse","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/TLHorse/TLBlogBed@master/blog_img/avatar.jpg","link":"/","description":"","socials":{"github":"https://github.com/TLHorse","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_45415111","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"我心中的蓝色饭卡","uid":"f21446c9190becb6a9dc56e68baf156f","slug":"我心中的蓝色饭卡","date":"2022-03-20T08:00:56.000Z","updated":"2022-03-20T14:37:15.676Z","comments":true,"path":"api/articles/我心中的蓝色饭卡.json","keywords":null,"cover":null,"text":"我正在执行上学前的最后一步：从挂钩上拽下饭卡，手拿挂带，抖一抖，整理平顺。将挂带套上脖子的一刻，我的思绪又回到了一年前…… 开学那天，它在我心中占据了重要的位置。将饭卡盼到手，才发现做工是如此精美：正反两面都薄而均匀地上了光，金色的纹样，如同迷宫般曲折在卡面上。我把它揣在兜里，生...","link":"","photos":[],"count_time":{"symbolsCount":669,"symbolsTime":"1 mins."},"categories":[{"name":"随笔","slug":"随笔","count":33,"path":"api/categories/随笔.json"}],"tags":[{"name":"记叙文","slug":"记叙文","count":11,"path":"api/tags/记叙文.json"}],"author":{"name":"TLHorse","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/TLHorse/TLBlogBed@master/blog_img/avatar.jpg","link":"/","description":"","socials":{"github":"https://github.com/TLHorse","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_45415111","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"父亲的脚步","uid":"4152b181b4f9b61849cbab9fad9d8b9a","slug":"父亲的脚步","date":"2022-02-14T07:52:59.000Z","updated":"2022-03-20T14:37:15.678Z","comments":true,"path":"api/articles/父亲的脚步.json","keywords":null,"cover":null,"text":"走进家门，进玄关，上楼梯，回卧室——这段每次回家的必经路线，却被我的父亲走得很漫长。 坐在二楼楼梯口的卧室中，听见第一声“嗒”，我就知道父亲的“征途”开始了。 我听着父亲的脚步，好像看到了他的背影。微微肥胖的身躯，斜挎着黑色的小公文包，双脚蹬着松垮的拖鞋。他右手轻扶着栏杆，身体微...","link":"","photos":[],"count_time":{"symbolsCount":741,"symbolsTime":"1 mins."},"categories":[{"name":"随笔","slug":"随笔","count":33,"path":"api/categories/随笔.json"}],"tags":[{"name":"记叙文","slug":"记叙文","count":11,"path":"api/tags/记叙文.json"}],"author":{"name":"TLHorse","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/TLHorse/TLBlogBed@master/blog_img/avatar.jpg","link":"/","description":"","socials":{"github":"https://github.com/TLHorse","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_45415111","juejin":"","customs":{}}}}}